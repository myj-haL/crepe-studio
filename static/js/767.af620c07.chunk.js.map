{"version":3,"file":"static/js/767.af620c07.chunk.js","mappings":"+HACA,QAA4B,8BAA5B,EAAqE,6BAArE,EAAyG,yBAAzG,EAA0I,0BAA1I,EAA4K,0BAA5K,EAAkN,8BAAlN,EAA0P,4BAA1P,EAAsS,kCAAtS,EAAmV,6BAAnV,EAA4X,8BAA5X,EAAwa,gC,2CCkFxa,QA9EA,WACI,MAAM,KAAEA,IAASC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAyBvC,OAtBAG,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,EAAUC,oCACVC,QAAiBC,MAAM,GAADC,OAAIJ,EAAO,aAAAI,OAAYf,IAEnD,GAAIa,EAASG,GAAI,CACb,MAAMC,QAAaJ,EAASK,OAC5Bb,EAAQY,EACZ,MACIE,QAAQC,MAAM,2BAEtB,CAAE,MAAOA,GACLD,QAAQC,MAAM,uBAAwBA,EAC1C,CAAC,QACGZ,GAAW,EACf,GAGJa,EAAW,GACZ,CAACrB,IAEAO,GACOe,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAITnB,GAKDkB,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAAAD,UACJE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBJ,SAAA,EAE5BD,EAAAA,EAAAA,KAAA,OAAKM,IAAI,gBAAgBC,IAAKzB,EAAK0B,aAEnCL,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeJ,SAAA,EAC3BE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWJ,SAAA,EACvBD,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAYJ,SAAEnB,EAAK2B,SAClCT,EAAAA,EAAAA,KAAA,KAAGI,UAAWC,EAAeK,wBAAyB,CAAEC,OAAQ7B,EAAK8B,eAEzET,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYJ,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAgBJ,SAAC,aAChCD,EAAAA,EAAAA,KAAA,QAAAC,SACKnB,EAAK+B,SAASC,KAAI,CAACC,EAASC,KACzBhB,EAAAA,EAAAA,KAAA,KAAeI,UAAWC,EAAoBJ,SAAEc,GAAxCC,QAIhBhB,EAAAA,EAAAA,KAAA,KAAGiB,KAAMnC,EAAKoC,KAAMd,UAAWC,EAAgBJ,SAAC,mBAOxDD,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAeJ,SAC1BnB,EAAKqC,UAAUL,KAAI,CAACM,EAAOJ,KACxBhB,EAAAA,EAAAA,KAAA,OAAiBM,IAAG,aAAAb,OAAeuB,GAAST,IAAKa,GAAvCJ,QAIlBhB,EAAAA,EAAAA,KAAA,UAAQqB,KAAK,SAASC,QAASA,IAAM1C,EAAS,UAAWwB,UAAWC,EAAkBJ,SAAC,qBAnCxFD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mBAyClB,C","sources":["webpack://minibim/./src/pages/Works/WorkDetail/index.module.css?bb75","pages/Works/WorkDetail/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WorkDetail_container__ntpNo\",\"contents\":\"WorkDetail_contents__MhfJk\",\"left\":\"WorkDetail_left__5gROV\",\"title\":\"WorkDetail_title__Cg7sb\",\"right\":\"WorkDetail_right__mGCyr\",\"categorys\":\"WorkDetail_categorys__-Iu8U\",\"content\":\"WorkDetail_content__BpYKG\",\"category_item\":\"WorkDetail_category_item__iFeIU\",\"file_img\":\"WorkDetail_file_img__mVU0g\",\"site_link\":\"WorkDetail_site_link__OpGtE\",\"backto_list\":\"WorkDetail_backto_list__BF9IH\"};","import style from \"./index.module.css\";\nimport Layouts from \"../../../common/components/Layouts\";\nimport { useParams, useNavigate } from \"react-router-dom\"; // useParams를 사용하여 URL 파라미터 받기\nimport { useState, useEffect } from \"react\";\n\nfunction WorkDetail() {\n    const { uuid } = useParams(); // URL에서 uuid를 받아옵니다.\n    const navigate = useNavigate(); // useNavigate 훅 초기화\n    const [post, setPost] = useState(null); // 게시물 데이터를 저장할 상태\n    const [loading, setLoading] = useState(true); // 로딩 상태\n\n    // 데이터 fetch를 위한 useEffect\n    useEffect(() => {\n        const fetchPost = async () => {\n            try {\n                const API_URL = process.env.REACT_APP_API_URL;\n                const response = await fetch(`${API_URL}/content/${uuid}`); // API 호출 (uuid에 맞는 데이터 가져오기)\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setPost(data); // 데이터 저장\n                } else {\n                    console.error(\"Error fetching post data\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching post:\", error);\n            } finally {\n                setLoading(false); // 로딩 상태 해제\n            }\n        };\n\n        fetchPost(); // 컴포넌트 마운트 시 데이터 fetch\n    }, [uuid]);\n\n    if (loading) {\n        return <p>Loading...</p>; // 로딩 중 표시\n    }\n\n    // 데이터가 없을 경우 처리\n    if (!post) {\n        return <p>Post not found.</p>;\n    }\n\n    return (\n        <Layouts>\n            <div className={style.container}>\n                {/* 임시로 사용한 배너 이미지 */}\n                <img alt=\"visual banner\" src={post.mainImage} />\n\n                <div className={style.contents}>\n                    <div className={style.left}>\n                        <h3 className={style.title}>{post.title}</h3>\n                        <p className={style.content} dangerouslySetInnerHTML={{ __html: post.content }} />\n                    </div>\n                    <div className={style.right}>\n                        <h3 className={style.categorys}>Service</h3>\n                        <span>\n                            {post.services.map((service, index) => (\n                                <p key={index} className={style.category_item}>{service}</p>\n                            ))}\n                        </span>\n\n                        <a href={post.link} className={style.site_link}>\n                            Website\n                        </a>\n                    </div>\n                </div>\n\n                {/* 이미지가 있을 경우 이미지 출력 */}\n                <div className={style.file_img}>\n                    {post.subImages.map((image, index) => (\n                        <img key={index} alt={`sub image ${index}`} src={image} />\n                    ))}\n                </div>\n\n                <button type=\"button\" onClick={() => navigate(\"/works\")} className={style.backto_list}>\n                    More Works\n                </button>\n            </div>\n        </Layouts>\n    );\n}\n\nexport default WorkDetail;\n"],"names":["uuid","useParams","navigate","useNavigate","post","setPost","useState","loading","setLoading","useEffect","async","API_URL","process","response","fetch","concat","ok","data","json","console","error","fetchPost","_jsx","children","Layouts","_jsxs","className","style","alt","src","mainImage","title","dangerouslySetInnerHTML","__html","content","services","map","service","index","href","link","subImages","image","type","onClick"],"sourceRoot":""}