{"version":3,"file":"static/js/142.b5bc945b.chunk.js","mappings":"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","sources":["pages/Contact/contactList.js","webpack://minibim/./src/pages/Contact/index.module.css?43a4","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","pages/Contact/index.js"],"sourcesContent":["export const contactList = [\n  {\n    id: 0,\n    name: '기관 혹은 기업',\n    type: 'text',\n    requir: true,\n    placeHolder: '기관 이름을 입력해 주세요',\n    category: 'company'\n  },\n  {\n    id: 1,\n    name: '담당자명 / 직책',\n    type: 'text',\n    requir: true,\n    placeHolder: '김미니/마케팅 팀장',\n    category:'name'\n  },\n  {\n    id: 2,\n    name: '이메일',\n    type: 'text',\n    requir: true,\n    placeHolder: 'mini@gmail.com',\n    category:'email'\n  },\n  {\n    id: 3,\n    name: '연락처',\n    type: 'number',\n    requir: true,\n    placeHolder: '010-0000-0000',\n    category:\"call\"\n  },\n  {\n    id: 4,\n    name: '기존 사이트 주소 (있는 경우만 입력)',\n    type: 'text',\n    requir: false,\n    placeHolder: '사이트 주소를 입력해 주세요',\n    category:'site'\n  },\n  {\n    id: 5,\n    name: '첨부파일',\n    type: 'file',\n    requir: false,\n    placeHolder: '파일을 선택해 주세요',\n    category:\"attachment\"\n  },\n  {\n    id: 6,\n    name: '문의사항',\n    requir: true,\n    placeHolder: '문의사항을 입력해 주세요',\n    category:'message'\n  },\n];","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__zcQk7\",\"title\":\"Contact_title__OjHYI\",\"enter_list\":\"Contact_enter_list__ke9B7\",\"form_box\":\"Contact_form_box__a5OW3\",\"custom_file\":\"Contact_custom_file__ASSxF\",\"file_name_input\":\"Contact_file_name_input__ssRcM\",\"category\":\"Contact_category__hmqJi\",\"requir\":\"Contact_requir__CKltG\",\"submit_btn\":\"Contact_submit_btn__FED2U\",\"file_upload\":\"Contact_file_upload__+jtB6\"};","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { useRef, useState } from 'react';\nimport { contactList } from './contactList';\nimport style from './index.module.css';\nimport Layouts from '../../common/components/Layouts';\nimport emailjs from \"@emailjs/browser\";\n\nfunction Contact() {\n  const fileRef = useRef();\n  const [isSelectFile, setIsSelectFile] = useState();\n\n  const handleFileBtn = () => {\n    fileRef.current.click();\n  };\n\n  const handleFileInput = (e) => {\n    const fileName = e.target.files[0].name;\n    setIsSelectFile(fileName);\n  };\n  \n  //이메일\n  const [formData, setFormData] = useState({\n    company: '',\n    name: '',\n    email: '',\n    call: '',\n    site: '',\n    message: '',\n  });\n\n  const handleEmailSubmit = (e) => {\n    e.preventDefault();\n\n    const templateParams = {\n      from_company : formData.company,\n      from_name : formData.name,\n      from_email : formData.email,\n      from_call : formData.call,\n      from_site : formData.site,\n      from_attachment : formData.attachment,\n      from_message : formData.message\n    }\n\n    if(!formData.company || !formData.name || !formData.email || !formData.call || !formData.message) {\n      alert('필수 항목을 채워주세요.');\n      return;\n    }\n\n    emailjs\n    .send(process.env.REACT_APP_EMAIL_SERVICE_ID, process.env.REACT_APP_EMAIL_TEMPLATE_ID, templateParams, process.env.REACT_APP_EMAIL_USER_ID)\n    .then(\n    (response) => {\n        console.log('Email sent successfully', response);\n        // setPopupType('success');\n    },\n    (error) => {\n        console.error('Error sending email', error);\n        // setPopupType('error');\n        return;\n    }\n    );\n  };\n\n\n  const emailHandleChange = (e) => {\n    const {name, value} = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]:value\n    }));\n  };\n\n\n\n\n  return (\n    <Layouts>\n      <div className={style.container}>\n        <h3 className={style.title}>Contact</h3>\n\n        <form onSubmit={handleEmailSubmit}>\n          <div className={style.enter_list}>\n            {contactList.map((item) => (\n              <div className={style.form_box} key={item.id}>\n                <h3 className={`${style.category} ${item.requir === true ? style.requir : ''}`}>{item.name}</h3>\n                {item.id === 6 ? (\n                  <textarea placeholder={item.placeHolder} name='message' value={formData.message} onChange={emailHandleChange}  className={style.user_text_box}></textarea>\n                ) : (\n                  <>\n                    {item.type === 'file' ? (\n                      <label htmlFor=\"fileName\">\n                        <input\n                          type=\"texet\"\n                          readOnly\n                          placeholder={isSelectFile ? '' : item.placeHolder}\n                          value={isSelectFile && isSelectFile}\n                          onClick={handleFileBtn}\n                          className={style.file_name_input}\n                        />\n                        <input\n                          type=\"file\"\n                          ref={fileRef}\n                          onChange={handleFileInput}\n                          id=\"fileName\"\n                          style={{ display: 'none' }}\n                        />\n                        <button type=\"button\" onClick={handleFileBtn} className={style.file_upload}>\n                          *파일선택\n                        </button>\n                      </label>\n                    ) : (\n                      <input type={item.type} name={item.category} value={formData[item.category] || ''} onChange={emailHandleChange}  placeholder={item.placeHolder} className={style.user_input} />\n                    )}\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <button className={style.submit_btn} type=\"submit\">\n            문의 보내기\n          </button>\n        </form>\n      </div>\n    </Layouts>\n  );\n}\n\nexport default Contact;"],"names":["contactList","id","name","type","requir","placeHolder","category","EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","templateParams","opts","blockList","limitRate","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","fileRef","useRef","isSelectFile","setIsSelectFile","useState","handleFileBtn","current","click","handleFileInput","e","fileName","target","files","formData","setFormData","company","email","call","site","emailHandleChange","prevData","_jsx","Layouts","children","_jsxs","className","style","container","title","onSubmit","preventDefault","from_company","from_name","from_email","from_call","from_site","from_attachment","attachment","from_message","emailjs","process","REACT_APP_EMAIL_SERVICE_ID","REACT_APP_EMAIL_TEMPLATE_ID","REACT_APP_EMAIL_USER_ID","then","console","log","error","alert","enter_list","map","item","form_box","placeholder","onChange","user_text_box","_Fragment","htmlFor","readOnly","onClick","file_name_input","ref","display","file_upload","user_input","submit_btn"],"sourceRoot":""}