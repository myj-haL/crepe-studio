{"version":3,"file":"static/js/366.877cdbcf.chunk.js","mappings":"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","sources":["webpack://minibim/./src/pages/Works/index.module.css?a75f","pages/Works/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Works_container__38Rdu\",\"post_list\":\"Works_post_list__GSjJV\",\"post_item\":\"Works_post_item__l8oVs\",\"title_box\":\"Works_title_box__E8xlv\",\"edit_btns\":\"Works_edit_btns__9EGQv\",\"write_btn\":\"Works_write_btn__YtrgS\"};","import style from \"./index.module.css\";\nimport Layouts from '../../common/components/Layouts/index';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nfunction Works() {\n    const token = localStorage.getItem(\"accessToken\"); // 로그인 여부 확인\n    const navigate = useNavigate(); // 페이지 이동을 위한 useNavigate 사용\n    const [posts, setPosts] = useState([]); // 게시글 데이터를 저장할 상태\n    const [loading, setLoading] = useState(true); // 로딩 상태 관리\n\n    // 페이지 이동을 위한 핸들러\n    const handleWriteClick = () => {\n        navigate(\"/works/write\");\n    };\n\n    // 수정 페이지로 이동하는 핸들러\n    const handleEditClick = (e, uuid) => {\n        e.preventDefault(); // 기본 링크 이동 방지\n        navigate(`/works/${uuid}/edit`); // 수정 페이지로 이동\n    };\n\n    // 게시글 삭제 핸들러\n    const handleDeleteClick = async (e, uuid) => {\n        e.preventDefault(); // 기본 링크 이동 방지\n\n        try {\n            const API_URL = process.env.REACT_APP_API_URL;\n            const response = await fetch(`${API_URL}/content/${uuid}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                // 삭제된 게시글을 상태에서 제거\n                setPosts((prevPosts) => prevPosts.filter((post) => post.uuid !== uuid));\n                alert(\"Post deleted successfully!\");\n            } else {\n                const errorData = await response.json();\n                alert(`Error: ${errorData.message}`);\n            }\n        } catch (error) {\n            console.error('Error deleting post:', error);\n            alert('Failed to delete the post.');\n        }\n    };\n\n    // API 호출하여 데이터 가져오기\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const API_URL = process.env.REACT_APP_API_URL;\n                const response = await fetch(`${API_URL}/content/list`); // API 엔드포인트 호출 (이 부분을 실제 API URL로 변경)\n                const data = await response.json();\n                setPosts(data); // API 응답 데이터를 상태에 저장\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            } finally {\n                setLoading(false); // 로딩 상태 해제\n            }\n        };\n\n        fetchPosts(); // 컴포넌트가 마운트될 때 데이터 로딩\n    }, []);\n\n    return (\n        <Layouts>\n            <div className={style.container}>\n                {/* 관리자 계정에서만 Write 버튼 노출 */}\n                {token && (\n                    <button\n                        type=\"button\"\n                        className={style.write_btn}\n                        onClick={handleWriteClick}\n                    >\n                        Write\n                    </button>\n                )}\n\n                {loading ? (\n                    <p>Loading...</p> // 로딩 중이면 \"Loading...\" 표시\n                ) : (\n                    <ul className={style.post_list}>\n                        {/* API에서 받은 데이터 반복 */}\n                        {posts.map((post) => (\n                            <li className={style.post_item} key={post.uuid}>\n                                <Link to={`/works/${post.uuid}`} className={style.post_link}>\n                                    <img alt=\"post thumbnail\" src={post.mainImage} />\n                                    <div className={style.title_box}>\n                                        <h3 className={style.post_title}>{post.title}</h3>\n                                        <p className={style.category}>\n                                            {post.services.join(' / ')} {/* 서비스 카테고리 표시 */}\n                                        </p>\n\n                                        {/* 로그인한 유저만 수정/삭제 버튼 노출 */}\n                                        {token && (\n                                            <div className={style.edit_btns}>\n                                                <button\n                                                    type=\"button\"\n                                                    className={style.del}\n                                                    onClick={(e) => handleDeleteClick(e, post.uuid)} // 삭제 버튼 클릭 시 handleDeleteClick 호출\n                                                >\n                                                    삭제\n                                                </button>\n                                                /\n                                                <button\n                                                    type=\"button\"\n                                                    className={style.edit}\n                                                    onClick={(e) => handleEditClick(e, post.uuid)} // 수정 버튼 클릭 시 handleEditClick 호출\n                                                >\n                                                    수정\n                                                </button>\n                                            </div>\n                                        )}\n                                    </div>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        </Layouts>\n    );\n}\n\nexport default Works;\n"],"names":["token","localStorage","getItem","navigate","useNavigate","posts","setPosts","useState","loading","setLoading","useEffect","async","API_URL","process","REACT_APP_API_URL","response","fetch","concat","data","json","error","console","fetchPosts","_jsx","Layouts","children","_jsxs","className","style","container","type","write_btn","onClick","handleWriteClick","post_list","map","post","post_item","Link","to","uuid","post_link","alt","src","mainImage","title_box","post_title","title","category","services","join","edit_btns","del","e","preventDefault","method","ok","prevPosts","filter","alert","errorData","message","handleDeleteClick","edit","handleEditClick"],"sourceRoot":""}