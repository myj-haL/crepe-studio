{"version":3,"file":"static/js/556.c2183321.chunk.js","mappings":"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","sources":["pages/Contact/contactList.js","webpack://minibim/./src/pages/Contact/index.module.css?43a4","pages/Contact/index.jsx"],"sourcesContent":["export const contactList = [\n  {\n    id: 0,\n    name: '기관 혹은 기업',\n    type: 'text',\n    requir: true,\n    placeHolder: '기관 이름을 입력해 주세요',\n    category: 'company'\n  },\n  {\n    id: 1,\n    name: '담당자명 / 직책',\n    type: 'text',\n    requir: true,\n    placeHolder: '김미니/마케팅 팀장',\n    category:'name'\n  },\n  {\n    id: 2,\n    name: '이메일',\n    type: 'text',\n    requir: true,\n    placeHolder: 'mini@gmail.com',\n    category:'email'\n  },\n  {\n    id: 3,\n    name: '연락처',\n    type: 'number',\n    requir: true,\n    placeHolder: '010-0000-0000',\n    category:\"call\"\n  },\n  {\n    id: 4,\n    name: '기존 사이트 주소 (있는 경우만 입력)',\n    type: 'text',\n    requir: false,\n    placeHolder: '사이트 주소를 입력해 주세요',\n    category:'site'\n  },\n  {\n    id: 5,\n    name: '첨부파일',\n    type: 'file',\n    requir: false,\n    placeHolder: '파일을 선택해 주세요',\n    category:\"attachment\"\n  },\n  {\n    id: 6,\n    name: '문의사항',\n    requir: true,\n    placeHolder: '문의사항을 입력해 주세요',\n    category:'message'\n  },\n];","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__zcQk7\",\"title\":\"Contact_title__OjHYI\",\"enter_list\":\"Contact_enter_list__ke9B7\",\"form_box\":\"Contact_form_box__a5OW3\",\"custom_file\":\"Contact_custom_file__ASSxF\",\"file_name_input\":\"Contact_file_name_input__ssRcM\",\"category\":\"Contact_category__hmqJi\",\"requir\":\"Contact_requir__CKltG\",\"submit_btn\":\"Contact_submit_btn__FED2U\",\"file_upload\":\"Contact_file_upload__+jtB6\"};","import { useRef, useState } from 'react';\nimport { contactList } from './contactList';\nimport style from './index.module.css';\nimport Layouts from '../../common/components/Layouts';\n\nfunction Contact() {\n  const fileRef = useRef();\n  const [isSelectFile, setIsSelectFile] = useState();\n\n  const handleFileBtn = () => {\n    fileRef.current.click();\n  };\n\n  const handleFileInput = (e) => {\n    const fileName = e.target.files[0].name;\n    setIsSelectFile(fileName);\n  };\n\n  //이메일\n  const [formData, setFormData] = useState({\n    company: '',\n    name: '',\n    email: '',\n    call: '',\n    site: '',\n    message: '',\n  });\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n  \n    if (!formData.company || !formData.name || !formData.email || !formData.call || !formData.message) {\n      alert('필수 항목을 채워주세요.');\n      return;\n    }\n  \n    const apiUrl = `${process.env.REACT_APP_API_URL}/contact`; // 환경 변수에서 API URL 생성\n    const formDataToSend = new FormData();\n  \n    formDataToSend.append('organization', formData.company);\n    formDataToSend.append('name', formData.name);\n    formDataToSend.append('email', formData.email);\n    formDataToSend.append('call', formData.call);\n    formDataToSend.append('site', formData.site);\n    formDataToSend.append('message', formData.message);\n  \n    // 파일 첨부\n    if (fileRef.current.files[0]) {\n      formDataToSend.append('attachment', fileRef.current.files[0]);\n    }\n  \n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        body: formDataToSend, // FormData 전송\n      });\n  \n      if (response.ok) {\n        console.log('Email sent successfully');\n        alert('문의가 성공적으로 전송되었습니다.');\n      } else {\n        console.error('Error sending email');\n        alert('문의 전송 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('서버와의 연결에 실패했습니다.');\n    }\n  };\n  \n\n  const emailHandleChange = (e) => {\n    const {name, value} = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]:value\n    }));\n  };\n\n\n\n\n  return (\n    <Layouts>\n      <div className={style.container}>\n        <h3 className={style.title}>Contact</h3>\n\n        <form onSubmit={handleEmailSubmit}>\n          <div className={style.enter_list}>\n            {contactList.map((item) => (\n              <div className={style.form_box} key={item.id}>\n                <h3 className={`${style.category} ${item.requir === true ? style.requir : ''}`}>{item.name}</h3>\n                {item.id === 6 ? (\n                  <textarea placeholder={item.placeHolder} name='message' value={formData.message} onChange={emailHandleChange}  className={style.user_text_box}></textarea>\n                ) : (\n                  <>\n                    {item.type === 'file' ? (\n                      <label htmlFor=\"fileName\">\n                        <input\n                          type=\"texet\"\n                          readOnly\n                          placeholder={isSelectFile ? '' : item.placeHolder}\n                          value={isSelectFile && isSelectFile}\n                          onClick={handleFileBtn}\n                          className={style.file_name_input}\n                        />\n                        <input\n                          type=\"file\"\n                          ref={fileRef}\n                          onChange={handleFileInput}\n                          id=\"fileName\"\n                          style={{ display: 'none' }}\n                        />\n                        <button type=\"button\" onClick={handleFileBtn} className={style.file_upload}>\n                          *파일선택\n                        </button>\n                      </label>\n                    ) : (\n                      <input type={item.type} name={item.category} value={formData[item.category] || ''} onChange={emailHandleChange}  placeholder={item.placeHolder} className={style.user_input} />\n                    )}\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <button className={style.submit_btn} type=\"submit\">\n            문의 보내기\n          </button>\n        </form>\n      </div>\n    </Layouts>\n  );\n}\n\nexport default Contact;"],"names":["contactList","id","name","type","requir","placeHolder","category","fileRef","useRef","isSelectFile","setIsSelectFile","useState","handleFileBtn","current","click","handleFileInput","e","fileName","target","files","formData","setFormData","company","email","call","site","message","emailHandleChange","value","prevData","_jsx","Layouts","children","_jsxs","className","style","container","title","onSubmit","async","preventDefault","alert","formDataToSend","FormData","append","fetch","method","body","ok","console","log","error","enter_list","map","item","form_box","placeholder","onChange","user_text_box","_Fragment","htmlFor","readOnly","onClick","file_name_input","ref","display","file_upload","user_input","submit_btn"],"sourceRoot":""}